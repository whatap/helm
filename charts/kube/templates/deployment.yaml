{{- if .Values.k8sOldVersion }}
apiVersion: extensions/v1beta1
{{- else }}
apiVersion: apps/v1
{{end}}
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ include "whatap-kube-agent.namespace" . }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  {{- if not .Values.k8sOldVersion }}
  selector:
    matchLabels:
      name: {{ .Values.deployment.label }}
  {{end}}
  template:
    metadata:
      labels:
        name: {{ .Values.deployment.label }}
    spec:
      {{- if .Values.imagePullSecret.name }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
      {{- end }}
      serviceAccountName: whatap
      volumes:
        - name: start-script-volume
          configMap:
            defaultMode: 0700
            name: master-start-script
        - name: whatap-config-volume
          emptyDir: {}
      containers:
        {{- if .Values.deployment.containers.controlPlaneHelper.enabled }}
        - name: {{ .Values.deployment.containers.controlPlaneHelper.name }}
          image: {{ .Values.deployment.containers.controlPlaneHelper.image }}
          resources:
            requests:
              memory: {{ .Values.deployment.containers.controlPlaneHelper.resources.requests.memory }}
              cpu: {{ .Values.deployment.containers.controlPlaneHelper.resources.requests.cpu }}
            limits:
              memory: {{ .Values.deployment.containers.controlPlaneHelper.resources.limits.memory }}
              cpu: {{ .Values.deployment.containers.controlPlaneHelper.resources.limits.cpu }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.deployment.containers.controlPlaneHelper.port }}
          command: [ "/data/agent/master/whatap_control_plane_helper" ]
          args: [ "-collect_control_plane_monitoring_enabled=true" ]
        {{- end }}
        - name: {{ .Values.deployment.containers.masterAgent.name }}
          image: {{ .Values.deployment.containers.masterAgent.image }}
          resources:
            requests:
              memory: {{ .Values.deployment.containers.masterAgent.resources.requests.memory }}
              cpu: {{ .Values.deployment.containers.masterAgent.resources.requests.cpu }}
            limits:
              memory: {{ .Values.deployment.containers.masterAgent.resources.limits.memory }}
              cpu: {{ .Values.deployment.containers.masterAgent.resources.limits.cpu }}
          ports:
            - containerPort: {{ .Values.deployment.containers.masterAgent.port }}
          command: ["/bin/entrypoint.sh"]
          env:
            {{- if .Values.deployment.containers.controlPlaneHelper.enabled }}
            - name: collect_control_plane_monitoring_enabled
              value: "true"
            {{- end }}
            - name: WHATAP_LICENSE
              value: {{ .Values.whatap.license | quote}}
            - name: WHATAP_HOST
              value: {{ .Values.whatap.host | quote }}
            - name: WHATAP_PORT
              value: {{ .Values.whatap.port | quote }}
            - name: WHATP_MEM_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Values.deployment.containers.masterAgent.name }}
                  resource: limits.memory
          volumeMounts:
            - name: start-script-volume
              mountPath: /bin/entrypoint.sh
              readOnly: true
              subPath: entrypoint.sh
            - name: whatap-config-volume
              mountPath: /whatap_conf
